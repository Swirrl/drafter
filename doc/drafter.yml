# Swagger API Specification for Drafter
swagger: '2.0'
info:
  title: Publish My Data API
  description: |
    The Publish My Data API.  Release1 represents routes that will be
    present in the first milestone for the DCLG, whilst Release2
    represents all of Release1 & Release2.
  version: 0.0.1
host: api.opendatacommunities.org
schemes:
  - https
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
paths:
  /draftsets:
    post:
      summary: Create a new Draftset
      tags:
        - Draftsets
        - Release1
      description: |
        Creates a new Draftset in the database.

        Optionally accepts query string parameters for a name and a description.
      parameters:
        - $ref: '#/parameters/display-name'
        - $ref: '#/parameters/draftset-description'
      responses:
        '303':
          description: Upon the creation of a new Draftset the caller is redirected to its representation.
    get:
      summary: List available Draftsets
      description: |
       Lists all Draftsets that the user has permissions to query, append and delete from.
      tags:
        - Draftsets
        - Release2
      responses:
        '200':
          description: An array of graphs
          schema:
            type: array
            items:
              $ref: '#/definitions/Draftset'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /draftset/{id}:
    get:
      summary: Get information about a Draftset.
      description: Returns information about the draftset
      parameters:
        - $ref: '#/parameters/id'
      tags:
        - Draftsets
        - Release2
      responses:
        '200':
          description: The Draftset.
          schema:
            $ref: '#/definitions/Draftset'
    put:
      summary: Set metadata on Draftset.
      description: Returns information about the draftset
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/display-name'
        - $ref: '#/parameters/draftset-description'
      tags:
        - Draftsets
        - Release2
      responses:
        '200':
          description: The Draftset.
          schema:
            $ref: '#/definitions/Draftset'

  /draftset/{id}/data:
    put:
      summary: Append the supplied RDF data to this Draftset.
      description: |
        Appends the supplied data to the Draftset identified by this
        resource.

        If the RDF data is supplied in a quad serialisation then the graph query parameter can be ommited.  If quads are uploaded and a graph parameter is specified the graph parameter will take precedence, causing all quads to be loaded into the same graph.

        If a graph parameter is supplied then
        the RDF data can be supplied in a triple serialisation.
      parameters:
        - $ref: "#/parameters/id"
        - $ref: '#/parameters/rdfdata'
        - $ref: '#/parameters/graph'
        - $ref: '#/parameters/message'
      consumes:
        - application/n-quads
        - application/trig
      produces:
        - application/json
      tags:
        - Draftsets
        - Release1
      responses:
        '204':
          description: The Draftset.
    delete:
      summary: Remove the supplied RDF data from this Draftset.
      description: |
        Removes the supplied data from the Draftset identified by this
        resource.

        If the RDF data is supplied in a quad serialisation then the graph query parameter can be ommited, and the supplied quads will be removed from this Draftset.

        If quads are uploaded and a graph parameter is specified all quads will be treated as if they are triples in the specified graph, and will be removed from it.

        If a graph parameter is supplied then
        the RDF data can be supplied in a triple serialisation.  The supplied triples will be removed from the Draftset.
      parameters:
        - $ref: "#/parameters/id"
        - $ref: '#/parameters/rdfdata'
        - $ref: '#/parameters/graph'
        - $ref: '#/parameters/message'
      consumes:
        - application/n-quads
        - application/trig
      produces:
        - application/json
      tags:
        - Draftsets
        - Release1
      responses:
        '204':
          description: The Draftset.
    get:
      parameters:
        - $ref: "#/parameters/id"
      summary: Access the quads inside this Draftset.
      tags:
        - Draftsets
        - Release2
      responses:
        '200':
          description: The Draftset.
  /draftset/{id}/publish:
    post:
      summary: Publish the specified Draftset.
      description: |
        Requests that this Draftset is published asynchronously to the live site.  If a job is successfully scheduled then an AsyncJob object will be returned.
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/message'
      tags:
        - Draftsets
        - Release1
      responses:
        '202':
          description: The Draftset is successfully scheduled for publication.
          schema:
            $ref: '#/definitions/AsyncJob'
  /draftset/{id}/query:
    post:
      summary: Query this Draftset with SPARQL.
      description: |
        Query this Draftset via the SPARQL query language and protocol.

        Please consult the SPARQL query protocol specification http://www.w3.org/TR/sparql11-protocol/ for a description of this endpoint.
      consumes:
        - application/sparql-query
      produces:
        - application/n-triples
        - text/turtle
        - application/sparql-results+xml
        - application/sparql-results+json
        - text/csv
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/query'
      tags:
        - Draftsets
        - Release1
      responses:
        '200':
          description: The query results returned according to the SPARQL specification.
  /status/finished-jobs/{jobid}:
    get:
      summary: Poll to see if asynchronous job has finished.
      description: |
        Poll this route until the AsyncJob is finished.    Whilst the job is ongoing
        this route will return a 404 until it is finished.  When the job finishes, through either successful completion or an error this route will return a 200 with a JSON object indicating the success or failure of the task.
      parameters:
        - $ref: "#/parameters/jobid"
      tags:
          - Release1
          - Status
      responses:
        '404':
          description: The job is not yet finished.
        '200':
          description: The job has finished.  To determine whether the job finished successfully or through a failure you will need to inspect the returned JSON object.
parameters:
  id:
    name: id
    description: ID of the Draftset
    in: path
    required: true
    type: string
  display-name:
    name: Draftset display name
    description: The name of the Draftset
    in: query
    required: false
    type: string
  draftset-description:
    name: Draftset description
    description: A description of the Draftset
    in: query
    required: false
    type: string
  message:
    name: Message
    description: A log message to be associated with the performed action.
    in: query
    required: false
    type: string
  jobid:
    name: jobid
    description: ID of the Draftset
    in: path
    required: true
    type: string
  rdfdata:
    name: data
    description: |
      RDF data in a supported serialization format.  If the format is a triple
      based serialisation then the graph parameter must be specified.
    in: body
    required: false
    schema:
      type: string
  graph:
    name: graph
    description: The URI of the named graph to perform the operation on.
    in: query
    required: false
    type: string
  query:
    name: query
    description: URI Encoded SPARQL Query
    in: query
    required: false
    type: string
definitions:
  Draftset:
    type: object
    properties:
      id:
        type: string
        description: 'Unique identifier representing this draftset'
      graphs:
        type: array
        description: 'The graphs which have been changed in this draftset'
        items:
          type: string
      display-name:
        type: string
        description: Display name of the Draftset.
      description:
        type: string
        description: A description of the Draftset.
## TODO define the error object
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  AsyncJob:
    type: object
    properties:
      type:
        type: string
      finished-job:
        type: string
      restart-id:
        type: string
