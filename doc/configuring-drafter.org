* Configuring Drafter

Drafter uses [[https://github.com/juxt/aero][aero]] for its configuration.  This means it uses
environment variables (and/or java properties) to pass configuration
variables from the environment. The file config-settings.edn defines all configuration settings,
along with their types, default values and the locations they are loaded from.

** Backends

Drafter supports multiple backends for storing RDF data.

#+BEGIN_EXAMPLE
DRAFTER_BACKEND               (default drafter.backend.sesame.remote)
#+END_EXAMPLE

| Namespace                     | Description                                                      |
|-------------------------------+------------------------------------------------------------------|
| drafter.backend.sesame.native | Sesame Native Store Backend                                      |
| drafter.backend.sesame.remote | Stardog optimised queries via the Sesame SparqlRepository client |

Different backends have their own configuration options. There are also common
configuration settings which apply across all backends:

#+BEGIN_EXAMPLE
DRAFTER_HTTP_PORT:            (default 3001)
DRAFTER_BATCHED_WRITE_SIZE:   (default 10000)
#+END_EXAMPLE

*** drafter.backend.sesame.native

The Sesame native backend stores the data in a Sesame native repository backed by files on a local disk. The location
of the data directory and the indexes to create can be configured:

#+BEGIN_EXAMPLE
DRAFTER_INDEXES
DEFAULT_REPO_PATH
#+END_EXAMPLE

*** drafter.backend.sesame.remote

The Sesame stardog backend accesses a remote Stardog instance through a Sesame SPARQL repository. The location of the
query and update endpoints for the Stardog database to use must be configured.

#+BEGIN_EXAMPLE
SPARQL_QUERY_ENDPOINT         REQUIRED http://$STARDOG_PORT_5820_TCP_ADDR:5820/${DATABASE_NAME:-pmd-data}/query
SPARQL_UPDATE_ENDPOINT        REQUIRED http://$STARDOG_PORT_5820_TCP_ADDR:5820/${DATABASE_NAME:-pmd-data}/update
#+END_EXAMPLE

** Examples

Some examples of supplying these properties are provided below:

As environment variables via lein run:

#+BEGIN_SRC shell :exports code
$ env DRAFTER_HTTP_PORT=3040 DRAFTER_REPO_PATH=/var/drafter-db lein run
#+END_SRC

As java properties via a built application jar:

#+BEGIN_SRC shell :exports code
$ java -Ddrafter.http.port=3050 -Ddrafter.repo.path=./drafter-database -jar target/drafter-0.1.0-SNAPSHOT-standalone.jar
#+END_SRC

As environment variables via a built application jar:

#+BEGIN_SRC shell :exports code
$ env DRAFTER_HTTP_PORT=3050 DRAFTER_REPO_PATH=./drafter-database java -jar target/drafter-0.1.0-SNAPSHOT-standalone.jar
#+END_SRC

** Configuring Timeouts

SPARQL queries may require a long time to be evaluated, so to maintain the
availability of the server, each SPARQL endpoint can be configured with a query
timeout. If the query timeout is exceeded during query execution, it will be
cancelled by the server. There are two types of query endpoint - live and draftset
and the query timeouts can be configured by the following environment variables:

#+BEGIN_SRC shell :exports code
DRAFTER_TIMEOUT_QUERY_ENDPOINT_LIVE
DRAFTER_TIMEOUT_QUERY_ENDPOINT_DRAFTSET
#+END_SRC

The corresponding values should be the query timeout period in seconds.

By default, endpoints have a query timeout of 30 seconds.

** Users Database

For the mongo database user backend you can set the environment variables:

`DRAFTER_USER_DB_NAME=pmd-app2_development`
`DRAFTER_USER_REPO_NS=drafter.user.mongo`

For an in memory database of users specified in a
`test-users.edn` file you can set:

`DRAFTER_USER_REPO_NS=drafter.user.memory-repository`

** User Token Signing Key

Drafter can be configured to authenticated users from a JSON Web Signing (JWS) token in the incoming request.
This token must be signed using the configured HMAC-SHA-256 key. This key should be specified by the
DRAFTER_JWS_SIGNING_KEY environment variable:

#+BEGIN_SRC shell :exports code
DRAFTER_JWS_SIGNING_KEY=secretkey
#+END_SRC

If the DRAFTER_JWS_SIGNING_KEY environment variable is not present, JWS token authentication will not be
available.

The signing key is also used to sign max-query-timeout parameters within SPARQL query requests allowing
privileged clients to override the endpoint maximum query timeout. If the signing key is not configured,
these parameters will be ignored and no clients will be allows to override query timeouts.

** System Properties

The following JVM system properties can be set to configure various
aspects of drafter.  This is not necessarily an exhaustive list:

| Property            | Default Value | Description                                                                                                                                                                |
|---------------------+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| http.maxConnections | 20?           | The maximum number of HTTP connections allowed inside Apache HTTP Client instances.  Use this to configure the connection pool size inside our Sesame SPARQLRepository, if using drafter against a remote store. |
