* Configuring Logging

Logging on the JVM is awkward due to Java's legacy. Logging in drafter uses three library
layers (from highest to lowest):

1. [[https://github.com/clojure/tools.logging][clojure.tools.logging]] is used for writing all log statements
2. [slf4j](http://www.slf4j.org/) as the logging backend used by `clojure.logging`
3. [log4j2](https://logging.apache.org/log4j/2.x/) as the logging implementation used by `slf4j`

The use of `slf4j` is arguably unnecessary since `clojure.tools.logging` can wrap `log4j2` directly but it is commonly
used by java libraries to configure their logging and will log its own diagnostic messages if not configured with a
backend so configuring it directly is cleaner.

Logging is configured by configuring log4j directly using the methods defined in the [log4j manual](https://logging.apache.org/log4j/2.x/manual/configuration.html).
There are two log4j configuration files defined - which one is used depends on how the classpath is configured. You can override the location of the logs directory
using an environment variable or specify your own configuration file explicitly by setting a system property.

1. `resources/log4j2.xml` - This is packaged in the jar and will be used by default in the REPL _unless you specified the `:test` alias during startup_ (see below)
2. `test/resources/log4j2-test.xml` - As described in the [log4j manual](https://logging.apache.org/log4j/2.x/manual/configuration.html) a `log4j2-test.xml` file
    is given priority over a `log4j2.xml` file when searching for log configuration files. The `log4j2-test.xml` file will therefore be used if the `test/resources`
    directory is on the classpath. This is the case when the `:test` alias is provided to the `clojure` command such as when running the tests. Be aware if you
    specify this alias when running the repl this is the configuration that will be loaded
3. Both the `log4j2.xml` and `log4j2-test.xml` allow the location of the logs directory to be specified by setting the `DRAFTER_LOGS_DIR` environment variable
4. The location of the configuration file can be specified by the `log4j.configurationFile` system property. System properties can be specified as JVM options of the
   form `-Dname=value`. To set the file location from the REPL you can start it with an alias that includes such an entry in its `:jvm-opts` list e.g.

__deps.edn__
```language clojure
{ ...
  {:aliases {:dev { ...
                  }
             ...
             :custom-logging {:jvm-opts ["-Dlog4j.configurationFile=file:///path/to/custom/log4j2.xml"]}
             }
  }
}
```

And add the `:custom-logging` alias when starting the REPL. Alternatively an existing alias can be modified to include the required :jvm-opts.
