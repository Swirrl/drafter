* Configuring Drafter

Drafter uses integrant for its configuration.  It contains a partial base [[/drafter/resources/drafter-base-config.edn][configuration]] inside its jar, and expects additional configuration to provided as EDN files via its command line.

These files will then be merged ontop of the internal base configuration in order (left to right).

This allows drafter configuration to be split up into profiles.

Most notably drafters base configuration is only a partial configuration.  Crucially it is missing how authentication and users should be managed.  

We typically provide this REQUIRED extra configuration on the command line as an extra file of integrant keys.

These partial configurations / profiles typically support:

1. auth0 authentication (used in pmd 4 and newer apps e.g. DEFRA's DRL app), e.g. [[../../package/install/drafter-dev-auth0.edn][drafter-dev-auth0.edn]]
2. Basic auth authentication with an in memory db (useful for dev) e.g. [[../../package/install/drafter-dev-basic-auth-memory-db.edn][drafter-dev-basic-auth-memory-db.edn]]
3. Basic auth authentication with a mongo user database (pmd 3 legacy) e.g. [[../../package/install/drafter-prod-pmd3-auth.edn][drafter-prod-pmd3-auth.edn]]

Additionally some of the integrant keys defined in [[/drafter/resources/drafter-base-config.edn][drafter-base-config.edn]] expect to receive their values via environment variables.  Using environment variables allows several processes to share the same value, which can be useful to ensure all processes in development are speaking to the same database etc.  The most important configuration items configured this way are =SPARQL_QUERY_ENDPOINT= and =SPARQL_UPDATE_ENDPOINT=.  Though it is now possible to override these values by providing the overrides in one of the edn files of configuration overrides.

** Launching drafter

To launch drafter you must now supply as a command line a file specifying
the configuration of your authentication mode (and/or) overrides for any
other aspects of the integrant system.

e.g. you may start it with a command like:

#+BEGIN_EXAMPLE
$ java -jar ./drafter.jar drafter-dev-basic-auth-memory-db.edn &
#+END_EXAMPLE

Or you might start it in auth0 mode with a file of endpoint overrides to override `SPARQL_QUERY_ENDPOINT` and `SPARQL_UPDATE_ENDPOINT`.

#+BEGIN_EXAMPLE
$ java -jar ./drafter.jar drafter-prod-auth0.edn endpoint.edn &
#+END_EXAMPLE

Some working example files to run drafter can be found in the omni configuration at [[../../package/install/][../../package/install]].  If you've used omni to install these files you may find them already installed and located in your projects =.omni_cache=.

* Logging

See [drafter-logging](https://github.com/Swirrl/drafter/blob/master/drafter/doc/drafter-logging.org) for a description of how to configure logging.

* Env vars

The base EDN file allows the following environment variables to be overriden

| Env Var                                 | Required | Default    | Description                                          |
|-----------------------------------------+----------+------------+------------------------------------------------------|
| SPARQL_QUERY_ENDPOINT                   | Yes      | N/A        | Backend SPARQL Query Endpoint (Stardog)              |
| SPARQL_UPDATE_ENDPOINT                  | Yes      | N/A        | Backend SPARQL Update Endpoint (Stardog)             |
| DRAFTER_HTTP_PORT                       | No       | 3001       | The HTTP port drafter listens on                     |
| DRAFTER_BATCHED_WRITE_SIZE              | No       | 10000      | Max size of write batches in triples                 |
| DRAFTER_TIMEOUT_QUERY_ENDPOINT_LIVE     | No       | 30 seconds | Live endpoint max query timeout                      |
| DRAFTER_TIMEOUT_QUERY_ENDPOINT_DRAFTSET | No       | 30 seconds | Draftset endpoint max query timeout                  |

=DRAFTER_BATCHED_WRITE_SIZE=

Due to the limitations of the sesame SPARQL repository, large append or delete jobs must split the incoming data into batches
to be applied sequentially to the stardog database. The size of these batches can be configured - note that out-of-memory
errors can occur if the value is set too high.

** AUTH0 Profile

If running in a PMD4 configuration you may want to set some of the
auth0 configuration through environment variables.  Consult the EDN
file for the specific =#env= readers to use.

** Mongo Profile

If running drafter in PMD3 legacy mode you may configure the mongo
users profile with the following env vars:

| DRAFTER_USER_DB_NAME                    | Yes      |            | Specific user database in mongo backend user server  |
| DRAFTER_MONGO_USER_COLLECTION           | No       | users      | The collection in mongo backend that holds the users |
| DRAFTER_MONGO_HOST                      | Yes      |            | Hostname for backend mongo service                   |
| DRAFTER_MONGO_PORT                      | Yes      |            | Port for backend mongo service                       |
| DRAFTER_JWS_SIGNING_KEY                 | Yes      |            | Shared token for JWT signing                         |


* System Properties

The following JVM system properties can be set to configure various
aspects of drafter.  This is not necessarily an exhaustive list:

| Property            | Default Value | Description                                                                                                                                                                |
|---------------------+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| http.maxConnections | 20?           | The maximum number of HTTP connections allowed inside Apache HTTP Client instances.  Use this to configure the connection pool size inside our Sesame SPARQLRepository, if using drafter against a remote store. |

* Legacy config documentation

Legacy documentation on environment variables etc may be found [[legacy-config-docs.org][here]].
It may still be useful, if you're looking still looking to set an
environment variable.
