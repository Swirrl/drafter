{:paths ["src" "resources"]

 :deps {buddy/buddy-auth {:mvn/version "2.1.0"}
        buddy/buddy-core {:mvn/version "1.5.0"}

        org.clojure/clojure {:mvn/version "1.10.1"}

        org.clojure/math.combinatorics {:mvn/version "0.1.4"}

        cognician/dogstatsd-clj {:mvn/version "0.1.2"}

        commons-codec {:mvn/version "1.12"}

        clj-commons/clj-yaml {:mvn/version "0.7.0"} ;; for loading our Swagger schemas
        metosin/scjsv {:mvn/version "0.5.0"} ;; for validating our Swagger/JSON schemas

        aero {:mvn/version "1.1.3"}

        integrant {:mvn/version "0.7.0"}
        meta-merge {:mvn/version "1.0.0"}

        ;; Lock dependency of jackson to a version that
        ;; works with sesame's sparql json results renderer
        ;; and the scjsv json schema validator.
        ;;
        ;; NOTE: When we upgrade sesame to RDF4j we can possibly
        ;; drop this override.
        ;;
        ;; Without this you get errors like:
        ;; java.lang.NoClassDefFoundError: com/fasterxml/jackson/core/FormatFeature, compiling:(cheshire/factory.clj:54:7)
        com.fasterxml.jackson.core/jackson-core {:mvn/version "2.9.8"}

        com.novemberain/monger {:mvn/version "3.5.0"}

        com.sun.mail/javax.mail {:mvn/version "1.6.2"}
        ;;[com.taoensso/tower "2.0.2"]

        grafter {:mvn/version "2.1.2"}

        org.apache.tika/tika-core {:mvn/version "1.23"} ;; mime types
        org.eclipse.rdf4j/rdf4j-runtime {:mvn/version "2.5.0"
                                         :exclusions [ch.qos.logback/logback-classic]}


        grafter/url {:mvn/version "0.2.5"}

        lib-noir {:mvn/version "0.9.9"
                  :exclusions [compojure org.clojure/java.classpath org.clojure/tools.reader org.clojure/java.classpath]}
        me.raynes/fs {:mvn/version "1.4.6"} ;; filesystem utils

        metosin/ring-swagger-ui {:mvn/version "3.20.1"}

        ;; Use JENA for our query rewriting
        org.apache.jena/jena-arq {:mvn/version "3.10.0"
                                  :exclusions [org.slf4j/slf4j-api
                                               org.slf4j/jcl-over-slf4j
                                               org.apache.httpcomponents/httpclient]}

        org.apache.jena/jena-base {:mvn/version "3.10.0" :exclusions [org.slf4j/slf4j-api]}
        org.apache.jena/jena-core {:mvn/version "3.10.0" :exclusions [org.slf4j/slf4j-api]}
        org.apache.jena/jena-iri {:mvn/version "3.10.0" :exclusions [org.slf4j/slf4j-api]}

        org.mindrot/jbcrypt {:mvn/version "0.4"}

        org.slf4j/slf4j-log4j12 {:mvn/version "1.7.26" :exclusions [log4j org.slf4j/slf4j-api]}
        prismatic/schema {:mvn/version "1.1.10"}

        ring-middleware-format {:mvn/version "0.7.4"}
        ring {:mvn/version "1.7.1" :exclusions [org.clojure/java.classpath]}
        ring-middleware-accept {:mvn/version "2.0.3"}
        ring-server {:mvn/version "0.5.0"}
        ring/ring-core {:mvn/version "1.7.1"}

        swirrl/lib-swirrl-server {:mvn/version "0.6.3" :exclusions [clout org.clojure/java.classpath]}
        wrap-verbs {:mvn/version "0.1.1"}

        com.auth0/jwks-rsa {:mvn/version "0.8.1"}
        com.auth0/java-jwt {:mvn/version "3.8.0"}
        martian {:mvn/version "0.1.10"}
        martian-clj-http {:mvn/version "0.1.10" :exclusions [clj-http]}
        clj-http {:mvn/version "3.10.0"}
        swirrl/auth0 {:git/url "git@github.com:Swirrl/swirrl-auth0"
                      :sha "29a8ced9943a5cc6e20c14202c123a3f970b18f5"}
        }

 :mvn/repos
 {"swirrl-jars-releases" {:url "s3://swirrl-jars/releases/"}
  "swirrl-jars-snapshots" {:url "s3://swirrl-jars/snapshots/"}}

 :jvm-opts ["-Djava.awt.headless=true" "-XX:-OmitStackTraceInFastThrow"]

 :aliases {:dev {:extra-paths ["env/dev/clj" "env/dev/resources"]
                 :extra-deps {clojure-csv/clojure-csv {:mvn/version "2.0.2"}
                              eftest {:mvn/version "0.5.7"} ;; repl test runner support
                              environ {:mvn/version "1.0.3"}
                              lambdaisland/kaocha {:mvn/version "0.0-418"}
                              org.clojure/data.json {:mvn/version "0.2.6"}
                              org.clojure/test.check {:mvn/version "0.9.0"}
                              ring-mock {:mvn/version "0.1.5"}
                              ring/ring-devel {:mvn/version "1.7.1" :exclusions [org.clojure/java.classpath org.clojure/tools.reader]}}}

           :test {:extra-paths ["env/dev/clj" "test" "test/resources"]}

           :prod {:extra-paths ["env/prod/clj" "env/prod/resources"]}

           :uber {:extra-paths ["target/classes"]
                  :main-opts ["-m" "mach.pack.alpha.capsule"
                              "-e" "env/prod/clj"
                              "--application-id" "drafter"
                              "-m" "drafter.main"]}

           :krunk {:extra-deps {swirrl/krunk {:git/url "git@github.com:Swirrl/krunk.git"
                                              :sha "dc2666a4550c219a8ce1eea326c82d9871d6908f"}}
                   :main-opts ["-m" "krunk.deploy"]}

           :pack {:extra-deps {pack/pack.alpha {:git/url "https://github.com/juxt/pack.alpha.git"
                                                :sha "81b9e47d992b17aa3e3af1a47aed1f0287ebe9b8"}}}

           :java9 {:jvm-opts ["--add-modules" "java.xml.bind"]}

           :spec {:main-opts ["-m" "drafter.check-specs" "100" "true"]}
           }}
